import Head from 'next/head'
import PrimaryButton from '#/components/PrimaryButton'
import HeaderBottom from '#/components/HeaderBottom'
import Teams from '#/components/Teams'
import Modal from '#/components/Modal'
import { useState } from 'react'
import TextInput from '#/components/TextInput'
import { getUniqueID, useAppDispatch, useAppSelector } from '#/utils/hooks'
import { addTeam } from '#/store/teamSlice'
import useAuth from '#/utils/auth'
import { useRouter } from 'next/router'

export default function Home() {
  const dispatch = useAppDispatch()
  const user = useAppSelector(state => state.user.user)
  const { currentUser } = useAuth()
  const { push } = useRouter()
  const [isOpen, setIsOpen] = useState<boolean>(false)
  const [isOpen2, setIsOpen2] = useState<boolean>(false)
  const [name, setName] = useState<string>('')
  const [category, setCategory] = useState<string>('')
  const [teamId, setTeamId] = useState<string>('')
  return (
    <>
      <Head>
        <title>Moskot TEAMS</title>
        <meta name='description' content='Generated by create next app' />
        <meta name='viewport' content='width=device-width, initial-scale=1' />
        <link rel='icon' href='/favicon.ico' />
      </Head>
      <main>
        <Modal
          isOpen={isOpen}
          title='Create a new team'
          body={
            <TextInput
              onChange={setName}
              legend='Team name'
              placeholder='enter a team name'
            />
          }
          successFunc={() => {
            if (name) {
              setIsOpen2(true)
              setIsOpen(false)
            } else alert('please enter the name of your team.')
          }}
          cancelFunc={() => {
            setName('')
            setIsOpen(false)
          }}
        />
        <Modal
          isOpen={isOpen2}
          title='Team category'
          body={
            <TextInput
              onChange={setCategory}
              legend='Team title'
              placeholder='App engineering'
            />
          }
          successFunc={() => {
            const uniqueID = getUniqueID('team')
            setTeamId(uniqueID)
            dispatch(
              addTeam({
                id: uniqueID,
                name,
                category,
                creator: user,
                members: [],
                pendingMembers: []
              })
            )
            push(`/team/${uniqueID}`)
          }}
          cancelFunc={() => {
            setName('')
            setCategory('')
            setIsOpen2(false)
          }}
        />
        <div className='container'>
          <HeaderBottom
            title='Team Creation management system'
            exerpt='Existing Team'
            rightBtn={
              <PrimaryButton
                primary={false}
                name='+ Create a team'
                onClick={() => (currentUser ? setIsOpen(true) : push('/login'))}
              />
            }
          />
          <Teams />
        </div>
      </main>
    </>
  )
}
